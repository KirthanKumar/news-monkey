#35 - ADDING INFINITE SCROLL TO NEWSMONKEY: 
npm i react-infinite-scroll-component

https://www.npmjs.com/package/react-infinite-scroll-component
https://codesandbox.io/p/sandbox/yk7637p62z?file=%2Fsrc%2Findex.js - this is live example from above doc
using this example:
<InfiniteScroll
          dataLength={this.state.items.length}
          next={this.fetchMoreData}
          hasMore={true}
          loader={<h4>Loading...</h4>}
        >
          {this.state.items.map((i, index) => (
            <div style={style} key={index}>
              div - #{index}
            </div>
          ))}
        </InfiniteScroll>

-------------------------------------------------------------------

#36 - ADDING A TOP LOADING BAR TO NEWSMONKEY: 
https://www.npmjs.com/package/react-top-loading-bar
npm i react-top-loading-bar

.this can be used with arrow function only not normal function.

when request limit is exhausted we get a error saying this.atate.articles is not defined. Or try to reach some uel to get news manually, they will say too many requests and its exhausted.

-------------------------------------------------------------------

#37 - HIDING API BY ADDING ADDING CUSTOM ENVIRONMENT VARIABLE:
we can create .env.local file in our project to store and use secrets like password, email, apikey etc. This .enc.local file should also be added to .gitignore file.

After creating .ev.local file and adding environment variables we have to restart the development server so that those variables are load. 

apiKey = process.env.REACT_APP_NEWS_API;

-------------------------------------------------------------------

#38 - INTRODUCTION TO REACT HOOKS:
We used class based components only for learning prpose, mostly we will use  function based components. We will convert this news-monkey project fully from class to function based components project. 

git checkout main --> this command is used to switch to main branch

hooks are function in function based components based, which allow to do all the things that we did in class based components.

What are React hooks?
* Features of class based components in function based components
* It allows you to use state and other React features without writing class
* Hooks are the functions which "hook into" React state and lifecycle features from function components.

Commonly used React Hooks:
* useState
* useEffect (the work which was done by componentDidMound() componentDidUpdate(), will be done in class based components using useEffect)
* useContext (When we have nexted components it will become a tree, and when we try to pass prop from the App.js to lowermost component the prop has to pass through its intermediate components also, this is called as prop drill. This we saw in news-monkey, when we had to pass prop to NewsItem component it goes through Newsm component. To resolve this we use function which is made globally available by context api)
* useRef (returns mutable reference object which contains .current property. Using this we can point to any element in DOM. In simple words useRef sontains reference to some DOM element)

-------------------------------------------------------------------

#39 - CHANGING CLASS BASED TO FUNCTION BASED:
react app can be partially class and function based also.

-------------------------------------------------------------------

#40 - STICKY NAVBAR AND NEWSMONKEY BUGFIXES:
when fetchMoreData() function is running, first thing we are doing is setPage(page+1); this is not setting page to its new state immediately, it is taking some time as it is a asynchronous function. So to resolve this in "url" we will manually write "page=${page+1}" and then setPage(page+1). 